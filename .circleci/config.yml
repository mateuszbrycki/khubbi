workflows:
  build-and-deploy:
    jobs:
      - checkout
      - test-frontend:
          requires:
            - checkout
      - test-backend:
          requires:
            - checkout
version: 2.1
jobs:
  checkout:
    docker:
      - image: cimg/ruby:3.1.0
    working_directory: ~/bookkeeper
    steps:
      - checkout
      - save_cache:
          key: v1-repo-cache-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/bookkeeper
  test-frontend:
    working_directory: ~/bookkeeper/src/main/front/
    docker:
      - image: node:22.0.0-alpine
    steps:
      - restore_cache:
          key: v1-repo-cache-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: "Install"
          command: npm install --force
      - run:
          name: Run tests with JUnit as reporter
          command: npm test --ci --runInBand --reporters=default --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./results/
            JEST_JUNIT_ADD_FILE_ATTRIBUTE: "true"
      - store_test_results:
          path: ./results/
      - save_cache:
          paths:
            - ~/bookkeeper/src/main/front/node_modules
          key: v1-node-modules-cache-{{ arch }}-{{ .Branch }}-{{ checksum "package-lock.json" }}
  test-backend:
    working_directory: ~/bookkeeper
    docker:
      - image: amazoncorretto:21
    steps:
      - restore_cache:
          key: v1-repo-cache-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: "Build"
          command: ./gradlew clean build
      - run:
          name: "Tests"
          command: ./gradlew test
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results